/*
 * Copyright 2019-2023 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java-gradle-plugin'
  id 'groovy'
}

repositories {
  gradlePluginPortal()
  mavenCentral()
}

dependencies {
  implementation 'com.github.ben-manes:gradle-versions-plugin:0.38.0'
  implementation 'se.patrikerdes:gradle-use-latest-versions-plugin:0.2.16'
  implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
  implementation 'com.github.jk1:gradle-license-report:2.0'
}

gradlePlugin {
  plugins {
    helpers {
      id = 'com.thoughtworks.go.gradle.task.helpers'
      implementationClass = 'com.thoughtworks.go.gradle.task.helpers.GocdPluginGradleTaskHelpersPlugin'
    }
  }
}

testing {
  suites {
    all {
      useSpock '2.2-groovy-3.0'

      targets {
        all {
          testTask.configure() {
            testLogging {
              events 'skipped', 'failed'
            }

            systemProperty 'java.io.tmpdir', "${buildDir}/tmp"
          }
        }
      }
    }

    functionalTest(JvmTestSuite) {
      dependencies {
        implementation project()
      }

      targets {
        all {
          testTask.configure {
            shouldRunAfter 'test'
          }
        }
      }
    }
  }
}

gradlePlugin.testSourceSets.add sourceSets.functionalTest

tasks.named('check') {
  dependsOn testing.suites.functionalTest
}
