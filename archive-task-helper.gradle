/*
 * Copyright 2023 Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

allprojects { eachProject ->
  // generate checksums for all archives
  tasks.withType(AbstractArchiveTask).configureEach { archiveTask ->
    includeEmptyDirs = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    preserveFileTimestamps = false
    reproducibleFileOrder = true

    ['MD5', 'SHA1', 'SHA-256'].each { algo ->
      archiveTask.outputs.files("${archiveTask.archiveFile.get()}.${algo}")
      archiveTask.doLast {
        ant.checksum file: archiveTask.archiveFile.get(), format: 'MD5SUM', algorithm: algo
      }
    }
  }

  // add relevant metadata
  tasks.withType(Jar).configureEach {
    manifest {
      attributes(
        'Go-Version': rootProject.extensions.gocdPlugin.goCdVersion,
        'Plugin-Revision': rootProject.extensions.gocdPlugin.pluginVersion,
        'Implementation-Title': eachProject.name,
        'Implementation-Version': eachProject.version,
        'Source-Compatibility': eachProject.java.sourceCompatibility,
        'Target-Compatibility': eachProject.java.targetCompatibility,
        'Git-SHA': rootProject.git.gitRevision(),
      )
    }
  }
}
